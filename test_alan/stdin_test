#!/bin/bash

###############################
# Alan version 2.0
# Released 2018-05-30
#
# Copyright Michael P. Dunne
# Contact: mpdunne@live.com
###############################

#http://misc.flogisoft.com/bash/tip_colors_and_formatting

NUCS=0; PROT=0; SHIFT=10;

# Parse in the command line options!

POSITIONAL=()
while [[ $# -gt 0 ]]; do
key="$1"
case $key in
    -n|--nucs)
    NUCS=1
    shift # past argument
    ;;
    -p|--protein)
    PROT=1
    shift # past argument
    ;;
    -s|--shift)
    SHIFT="$2"
    shift # past argument
    shift # past value
    ;;
    --coln)
    COLN="$2"
    if [[ "$COLN" == "" ]]; then
	echo "Error: --coln option requires a value :)"; exit; fi
    shift # past argument
    shift # past value
    ;;
    --colp)
    COLP="$2"
    if [[ "$COLP" == "" ]]; then
	echo "Error: --colp option requires a value :)"; exit; fi
    shift # past argument
    shift # past value
    ;;

    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

# Sanity checks on the command line options!

# Check only one mol type is being picked
if [[ $[$NUCS + $PROT] -gt 1 ]]; then
	echo "Error: Options -p and -n can't be used simultaneously :)."
	echo "       Leave blank for automatic selection!"
	exit; fi

# Check the shift value is a positive number
if ! expr "$SHIFT" : '[0-9]\+$' >/dev/null; then
	echo "Error: Value for -s must be a positive integer! :)"
	exit; fi
if [[ "$SHIFT" -le 0 ]]; then
	echo "Error: Value for -s must be a positive integer!"
	exit; fi

# save filename as $INFILE or substitute for stdin if not present
#INFILE=${1:-/dev/stdin:stdin}
INFILE=${1:-/dev/stdin}
#INFILE=${1}

# Check the input file is specified and present or stdin is open
if [[ ! -f $INFILE || "$INFILE" == "" ]]; then
	if [[ ! -t 0 ]]; then
		echo "Read from stdin"
	else
		echo "Error: Please specify a valid input file! :)"
		exit; fi
	fi

#echo "$INFILE"
shopt -s lastpipe
while read line; do
	echo "$line"
done < "$INFILE"


